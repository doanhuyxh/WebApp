@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row" id="AppVueUser">
    <div class="col-xl-12 row mt-4">
        <div class="col-xl-10"></div>
        <div class="col-xl-2"><div v-on:click="AddUser" class="btn btn-success">Thêm người dùng</div></div>
    </div>
    <div class="col-xl-12 mt-5">
        <table class="table" id="tableUser">
            <thead class="bg-gradient-danger text-success">
                <tr>
                    <th>Ảnh đại diện</th>
                    <th>Họ và Tên</th>
                    <th>Tài khoản</th>
                    <th>Email</th>
                    <th>Số điện thoại</th>
                    <th>Hoạt động</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ViewBag.ListUser)
                {
                    <tr>
                        <td><img src="/@item.AvatarPath" style="width:80px; height: auto" /></td>
                        <td>@item.UserName</td>
                        <td>@item.FisrtName @item.LastName</td>
                        <td>@item.Email</td>
                        <td>@item.PhoneNumber</td>
                        <td>
                            @if (item.IsActive)
                            {
                                <p class="btn btn-success" v-on:click="ChangeActive('@item.Email')">Đang hoạt động</p>
                            }
                            else
                            {
                                <p class="btn btn-danger" v-on:click="ChangeActive('@item.Email')">Đã tắt</p>
                            }
                        </td>
                        <th>
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="action${index}" data-bs-toggle="dropdown" aria-expanded="false">
                                    Hành động
                                </button>
                                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="action${index}">
                                    <li class="cursor-pointer"><a class="dropdown-item" v-on:click="Update('@item.Email')">cập nhật</a></li>
                                    <li class="cursor-pointer"><a class="dropdown-item" v-on:click="ChangePassword('@item.Email')">Đổi mật khẩu</a></li>
                                    <li class="cursor-pointer"><a class="dropdown-item">Gửi tin nhắn</a></li>
                                </ul>
                            </div>
                        </th>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>

@await Html.PartialAsync("ChangePassword")
<script type="text/javascript">
    const AppVueUser = new Vue({
        el: "#AppVueUser",
        mounted() {

        },
        data: {
            ListUser: []
        },
        computed: {

        },
        methods: {
            Update(email) {
                $("#BigModalDiv").load(`/Admin/UserManager/AddEditUser?email=${email}`, function () {
                    $("#BigModal").modal("show");
                    $("#titleBigModal").html("Cập nhật thông tin người dùng")
                })
            },
            ChangePassword(email) {
                $("#SmallModal").modal("show");
                $("#EmailNguoiDung").val(email);
                $("#EmailNguoiDung").val("");
                $("#ConfirmPassword").val("");
                $("#Password").val("");
            },
            AddUser() {
                $("#BigModalDiv").load(`/Admin/UserManager/AddUser`, function () {
                    $("#BigModal").modal("show");
                    $("#titleBigModal").html("Thêm người dùng mới")
                })
            },
            ChangeActive(email) {
                fetch("/Admin/UserManager/ChangeStatus?email=" + email)
                    .then(res => { window.location.reload() })
            }
        }
    });
    function Save(type) {
        if (type == 3) {
            let email = $("#EmailNguoiDung").val();
            let pass = $("#ConfirmPassword").val();
            fetch(`/Admin/UserManager/ChangePassword?email=${email}&password=${pass}`)
                .then(res => {
                    Swal.fire({
                        title: "Mật khẩu đã được cập nhật",
                        icon: 'success',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Oke'
                    }).then((result) => {
                        document.getElementById("close").click()
                    })
                })
            return;

        }

        const data = new FormData();
        data.append("ApplicationUserId", $("#ApplicationUserId").val())
        data.append("FisrtName", $("#FisrtName").val())
        data.append("LastName", $("#LastName").val())
        data.append("PhoneNumber", $("#PhoneNumber").val())
        data.append("Email", $("#Email").val())
        data.append("AvatarFile", document.getElementById("AvatarFile").files[0])
        data.append("IsActive", document.getElementById("IsActive"))
        if (type == 1) {
            data.append("UserName", $("#UserName").val())
            data.append("Password", $("#Password2").val())
            data.append("Email", $("#Email").val())
        }

        axios.post('/Admin/UserManager/AddEditUser', data)
            .then(data => {
                let mesage = data.data.mesaage;
                if (data.data.success) {
                    Swal.fire({
                        title: mesage,
                        icon: 'success',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Oke'
                    }).then((result) => {
                        document.getElementById("close").click()
                        window.location.reload();
                    })
                }
                else {
                    Swal.fire({
                        title: mesage,
                        icon: 'warning',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Oke'
                    })
                }

            })
            .catch(error => {
                console.error(error);
            });

    }
</script> 